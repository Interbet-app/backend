openapi: "3.0.0"
info:
   title: InterBet
   version: "1.0.0"

servers:
   - url: https://interbet-api.herokuapp.com
   - url: https://api/v1/interbet.app
   - url: localhost:4000

components:
   securitySchemes:
      bearerAuth:
        name: authentication
        in: header
        type: "apiKey"

   schemas:
      user:
         type: object
         properties:
            id:
               type: integer
               format: int64
            name:
               type: string
            email:
               type: string
            level:
               type: integer
               format: int64
            externalId:
               type: string
            affiliateId:
               type: integer
               format: int64
            teamId:
               type: integer
               format: int64
            picture:
               type: string
            oauth:
               type: string
               enum: ["facebook", "google", "instagram"]
            createdAt:
               type: string
               format: date-time
            updatedAt:
               type: string
               format: date-time
      team:
         type: object
         properties:
            id:
               type: integer
               format: int64
            name:
               type: string
            abbreviation:
               type: string
            location:
               type: string
            picture:
               type: string
            createdAt:
               type: string
               format: date-time
            updatedAt:
               type: string
               format: date-time
      athletic:
         type: object
         properties:
            id:
               type: integer
               format: int64
            name:
               type: string
            abbreviation:
               type: string
            picture:
               type: string
            createdAt:
               type: string
               format: date-time
            updatedAt:
               type: string
               format: date-time
      notification:
         type: object
         properties:
            id:
               type: integer
               format: int64
            userId:
               type: integer
               format: int64
            title:
               type: string
            message:
               type: string
            unread:
               type: boolean
            createdAt:
               type: string
               format: date-time
            updatedAt:
               type: string
               format: date-time 
      wallet:
         type: object
         properties:
            id:
               type: integer
               format: int64
            userId:
               type: integer
               format: int64
            balance:
               type: number
            blocked:
               type: number
            score:
               type: integer
            createdAt:
               type: string
               format: date-time
            updatedAt:
               type: string
               format: date-time

paths:
   /google/oauth:
      post:
         tags:
            - OAuth
         parameters:
            - name: google_authentication
              in: header
              required: true
              schema:
                 type: string
            - name: "affiliateId"
              in: query
              schema:
                 type: integer
                 format: int64
         responses:
            "200":
               description: OK
               content:
                  application/json:
                     schema:
                        $ref: "#/components/schemas/user"
            "500":
               description: Internal Server Error
               content:
                  application/json:
                     schema:
                        type: object
                        properties:
                           message:
                              type: string
   /facebook/oauth:
      post:
         tags:
            - OAuth
         parameters:
            - name: accessToken
              in: query
              required: true
              schema:
                 type: string
            - name: "affiliateId"
              in: query
              schema:
                 type: integer
                 format: int64
            - name: "name"
              description: "The name of facebook user"
              in: query
              schema:
                  type: string
            - name: "email"
              description: "Email of the user"
              in: query
              schema: 
               type: string
            - name: "picture"
              description: "Picture URL"
              in: query
              schema:
                 type: string
            - name: "id"
              description: "Facebook ID"
              in: query
              schema:
                  type: string

         responses:
            "200":
               description: OK
               content:
                  application/json:
                     schema:
                        $ref: "#/components/schemas/user"
   /instagram/oauth:
      post:
         tags:
            - OAuth
         parameters:
            - name: "affiliateId"
              in: query
              schema:
                 type: integer
                 format: int64
            - name: "code"
              description: "Instagram code"
              in: query
              schema:
                  type: string
         responses:
            "200":
               description: OK
               content:
                  application/json:
                     schema:
                        $ref: "#/components/schemas/user"
   /logout:
      post:
         tags:
            - OAuth
         security:
           - bearerAuth: ["authentication"]
         responses:
            "200":
               description: Invalida o token de acesso do usu√°rio
               content:
                  application/json:
                     schema:
                        type: object
                        properties:
                           message:
                              type: string
   /user:
      get:
         tags:
            - User
         security:
           - bearerAuth: ["authentication"]
         responses:
            "200":
               description: Return user details
               content:
                  application/json:
                     schema:
                        $ref: "#/components/schemas/user"
      put:
         tags:
            - User
         security:
           - bearerAuth: ["authentication"]
         parameters:
            - name: "name"
              description: "The name of user"
              in: query
              schema:
                  type: string
            - name: "email"
              description: "Email of the user"
              in: query
              schema: 
               type: string
            - name: "picture"
              description: "Picture URL"
              in: query
              schema:
                 type: string
         responses:
            "200":
               description: OK
               content:
                  application/json:
                     schema:
                        $ref: "#/components/schemas/user"
   /wallet:
      get:
         tags:
            - Wallet
         security:
           - bearerAuth: ["authentication"]
         responses:
            "200":
               description: Return wallet details
               content:
                  application/json:
                     schema:
                        $ref: "#/components/schemas/wallet"
   /notifications:
      get:
         tags:
            - Notifications
         security:
           - bearerAuth: ["authentication"]
         responses:
            "200":
               description: Return all notifications
               content:
                  application/json:
                     schema:
                        type: array
                        items:
                           $ref: "#/components/schemas/notification"
   /notifications/mark-as-read/{id}:
      put:
         tags:
            - Notifications
         security:
           - bearerAuth: ["authentication"]
         parameters:
            - name: id
              in: path
              required: true
              schema:
                 type: integer
                 format: int64
         responses:
            "200":
               description: Return all notifications
               content:
                  application/json:
                     schema:
                        $ref: "#/components/schemas/notification"
   /notifications/{id}:
      delete:
         tags:
            - Notifications
         security:
           - bearerAuth: ["authentication"]
         parameters:
            - name: id
              in: path
              required: true
              schema:
                 type: integer
                 format: int64
         responses:
            "200":
               description: delete successful
            "422":
               description: Invalid ID
            "404":
               description: Not found
            "403":
               description: Unauthorized
   /teams:
      get:
         tags:
            - Teams
         security:
           - bearerAuth: ["authentication"]
         responses:
            "200":
               description: Return teams
               content:
                  application/json:
                     schema:
                        type: array
                        items:
                           $ref: "#/components/schemas/team"
   /teams/{search}:
      get:
         tags:
            - Teams
         security:
           - bearerAuth: ["authentication"]
         parameters:
            - name: name
              in: path
              required: true
              schema:
                 type: string
         responses:
            "200":
               description: Return all teams by like the name
               content:
                  application/json:
                     schema:
                        type: array
                        items:
                           $ref: "#/components/schemas/team"
   /athletics:
      get:
         tags:
            - Athletics
         security:
           - bearerAuth: ["authentication"]
         responses:
            "200":
               description: Return all athletics
               content:
                  application/json:
                     schema:
                        type: array
                        items:
                           $ref: "#/components/schemas/athletic"
   /athletics/{search}:
      get:
         tags:
            - Athletics
         security:
           - bearerAuth: ["authentication"]
         parameters:
            - name: name
              in: path
              required: true
              schema:
                 type: string
         responses:
            "200":
               description: Return all athletics by like the name
               content:
                  application/json:
                     schema:
                        type: array
                        items:
                           $ref: "#/components/schemas/athletic"
   